
						MAP to do list:

*|V|comprendre les arbres binaires et trouver des liens:
	https://en.wikipedia.org/wiki/Red%E2%80%93black_tree

*|V|Pair: comprendre.
		utiliser la pair de la std.

*|V|RedBlackTree:
Créer un Red black tree avec des méthodes etc,
	|V|structure de base, constructeur, destructeurs.
	|V|Insertion.
	|V|Deletion.
		|V|initial steps 1: find x.
		|V|initial step 2.
		---->pb quand x et nullptr pour déterminer les cas.
			->de quoi a ton besoins?
				-x sibling.
				-x parent.
			->solution? créer des leafs nodes, sans right/left ni pair, juste parents.
				->chaque node a 2 leafs, qui sont remplacés quand ils ont un fils.
		|V|case 0.
		|V|case 1.
		|V|case 2.
		|V|case 3.
		|V|case 4.
	|V|Search.
	|V|Destructeur.
	|V|segfault delete inexistant value.

MAP:
*|V|Member classes:
	|V|value_compare.

*|V|Member functions:
	|V|Constructors:
		|V|default.
		|V|copy.
		|V|it.
	|V|Destructor.
	|V|operator=.

*|V|Element access:
	|V|operator[].

*|V|iterators
	|V|begin.
	|V|end.
	|V|rbegin.
	|V|rend.

*|V|Capacity:
	|V|empty.
	|V|size.
	|V|max_size.

*|V|Modifiers:
	|V|clear.
	|V|insert.
	|V|erase.
	|V|swap.

*|V|Lookup:
	|V|count.
	|V|find.
	|V|equal_range.
	|V|lower_bound.
	|V|upper_bound.

*|V|Observers:
	|V|key_comp.
	|V|value_comp.

*|V|Non-member functions:
	|V|operators.
	|V|swap.
