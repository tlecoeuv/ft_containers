
							LIST:

Infos:
-double link list, on peut itérer dans les deux sens.
-http://sdz.tdct.org/sdz/les-listes-circulaires-doublement-chainees-en-c.html
-iterator, begin()(si list vide, sinon sur  1er node) et end() pointent sur la racine.
-https://codefreakr.com/how-is-c-stl-list-implemented-internally/
-https://cs.calvin.edu/activities/books/c++/intro/3e/WebItems/Ch14-Web/STL-List-14.4.pdf


to_do_list:

*|V|commencer le template, définir la structure d'un node.

*Méthodes:
-|V|basiques:
	|V| Constructeurs.
	|V| Destructeur.
	|V| operator=.

-|V|iterators:
	|V| begin.
	|V| end.
	|V| rbegin.
	|V| rend.
	|V| const.

-|V|Capacity:
	|V| Empty.
	|V| Size.
	|V| max_size.

-|V|Element access:
	|V|front.
	|V|back.

-|V|Modifiers
	|V| assign.
	|V| push_front.
	|V| pop_front.
	|V| push_back.
	|V| pop_back.
	|V| insert.
	|V| erase.
	|V| swap.
	|V| resize.
	|V| clear.

-| |Operations:
	|V| splice:
	|V| remove.
	|V| remove_if.
	|V| unique.
	|V| merge.
	|V| sort.
	|V| reverse. (bug à réglé qui pose pb sur sort)

-|V|Non-member function overloads:
	|V| relational operators:
		|V| ==.
		|V| !=.
		|V| <.
		|V| <=.
		|V| >.
		|V| >=.
	|V| swap.
